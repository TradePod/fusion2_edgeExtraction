-- -------------------------------------------------------------
-- 
-- File Name: C:\Projects\fusion2_HWaccel_IP\rgb_gauss_sobel_full_64\hdlsrc\rgb_gauss_sobel_64bit_full\Subsystem_ip_dut.vhd
-- Created: 2023-05-04 18:21:28
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem_ip_dut
-- Source Path: Subsystem_ip/Subsystem_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Subsystem_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        ctrl_hStart                       :   IN    std_logic;  -- ufix1
        ctrl_hEnd                         :   IN    std_logic;  -- ufix1
        ctrl_vStart                       :   IN    std_logic;  -- ufix1
        ctrl_vEnd                         :   IN    std_logic;  -- ufix1
        ctrl_valid                        :   IN    std_logic;  -- ufix1
        video_in                          :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        greenMax                          :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        blueMax                           :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        redMax                            :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        greenMin                          :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        blueMin                           :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        redMin                            :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        ce_out                            :   OUT   std_logic;  -- ufix1
        valid_out_hStart                  :   OUT   std_logic;  -- ufix1
        valid_out_hEnd                    :   OUT   std_logic;  -- ufix1
        valid_out_vStart                  :   OUT   std_logic;  -- ufix1
        valid_out_vEnd                    :   OUT   std_logic;  -- ufix1
        valid_out_valid                   :   OUT   std_logic;  -- ufix1
        video_out                         :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
        );
END Subsystem_ip_dut;


ARCHITECTURE rtl OF Subsystem_ip_dut IS

  -- Component Declarations
  COMPONENT Subsystem_ip_src_Subsystem
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          ctrl_hStart                     :   IN    std_logic;  -- ufix1
          ctrl_hEnd                       :   IN    std_logic;  -- ufix1
          ctrl_vStart                     :   IN    std_logic;  -- ufix1
          ctrl_vEnd                       :   IN    std_logic;  -- ufix1
          ctrl_valid                      :   IN    std_logic;  -- ufix1
          video_in                        :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          greenMax                        :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          blueMax                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          redMax                          :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          greenMin                        :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          blueMin                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          redMin                          :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          ce_out                          :   OUT   std_logic;  -- ufix1
          valid_out_hStart                :   OUT   std_logic;  -- ufix1
          valid_out_hEnd                  :   OUT   std_logic;  -- ufix1
          valid_out_vStart                :   OUT   std_logic;  -- ufix1
          valid_out_vEnd                  :   OUT   std_logic;  -- ufix1
          valid_out_valid                 :   OUT   std_logic;  -- ufix1
          video_out                       :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Subsystem_ip_src_Subsystem
    USE ENTITY work.Subsystem_ip_src_Subsystem(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL valid_out_hStart_sig             : std_logic;  -- ufix1
  SIGNAL valid_out_hEnd_sig               : std_logic;  -- ufix1
  SIGNAL valid_out_vStart_sig             : std_logic;  -- ufix1
  SIGNAL valid_out_vEnd_sig               : std_logic;  -- ufix1
  SIGNAL valid_out_valid_sig              : std_logic;  -- ufix1
  SIGNAL video_out_sig                    : std_logic_vector(63 DOWNTO 0);  -- ufix64

BEGIN
  u_Subsystem_ip_src_Subsystem : Subsystem_ip_src_Subsystem
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              ctrl_hStart => ctrl_hStart,  -- ufix1
              ctrl_hEnd => ctrl_hEnd,  -- ufix1
              ctrl_vStart => ctrl_vStart,  -- ufix1
              ctrl_vEnd => ctrl_vEnd,  -- ufix1
              ctrl_valid => ctrl_valid,  -- ufix1
              video_in => video_in,  -- ufix64
              greenMax => greenMax,  -- ufix8
              blueMax => blueMax,  -- ufix8
              redMax => redMax,  -- ufix8
              greenMin => greenMin,  -- ufix8
              blueMin => blueMin,  -- ufix8
              redMin => redMin,  -- ufix8
              ce_out => ce_out_sig,  -- ufix1
              valid_out_hStart => valid_out_hStart_sig,  -- ufix1
              valid_out_hEnd => valid_out_hEnd_sig,  -- ufix1
              valid_out_vStart => valid_out_vStart_sig,  -- ufix1
              valid_out_vEnd => valid_out_vEnd_sig,  -- ufix1
              valid_out_valid => valid_out_valid_sig,  -- ufix1
              video_out => video_out_sig  -- ufix64
              );

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  valid_out_hStart <= valid_out_hStart_sig;

  valid_out_hEnd <= valid_out_hEnd_sig;

  valid_out_vStart <= valid_out_vStart_sig;

  valid_out_vEnd <= valid_out_vEnd_sig;

  valid_out_valid <= valid_out_valid_sig;

  video_out <= video_out_sig;

END rtl;

